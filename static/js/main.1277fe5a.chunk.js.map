{"version":3,"sources":["images/me.png","components/Navbar.js","components/Header.js","components/index.js","components/Resume.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","menuContainer","width","background","height","avatar","display","margin","listItem","color","menuItems","listIcon","listText","listPath","AssignmentInd","Apps","ContactMail","Navbar","slider","useState","right","state","setState","toggleSideMenu","open","classes","Box","component","AppBar","position","style","Toolbar","IconButton","onClick","MenuOpenRounded","Typography","variant","onClose","className","Avatar","src","alt","Divider","List","map","IsItem","key","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","title","subtitle","marginBottom","typedOutput","top","left","transform","textAlign","zIndex","Header","Grid","container","justify","strings","typeSpeed","backSpeed","loop","particles","Home","canvasClassName","params","number","value","density","enable","value_area","size","line_linked","shadow","blur","shape","type","mainContainer","Resume","align","App","CssBaseline","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1277fe5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.7871c373.png\";","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RightMenu from \"@material-ui/core/Drawer\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Avatar,\r\n  List,\r\n  Divider,\r\n  Typography,\r\n  Box,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  AssignmentInd,\r\n  Home,\r\n  Apps,\r\n  ContactMail,\r\n  MenuOpenRounded,\r\n} from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport avatar from \"../images/me.png\";\r\n\r\nconst useStyles = makeStyles({\r\n  menuContainer: {\r\n    width: 250,\r\n    background: \"#311\",\r\n    height: \"30rem\",\r\n  },\r\n  avatar: {\r\n    display: \"block\",\r\n    margin: \"0.5rem auto\",\r\n    width: 104,\r\n    height: 104,\r\n  },\r\n  listItem: {\r\n    color: \"lightblue\",\r\n  },\r\n});\r\nconst menuItems = [\r\n  {\r\n    listIcon: <Home />,\r\n    listText: \"Home\",\r\n    listPath: \"/\",\r\n  },\r\n  {\r\n    listIcon: <AssignmentInd />,\r\n    listText: \"Resume\",\r\n    listPath: \"/resume\",\r\n  },\r\n  {\r\n    listIcon: <Apps />,\r\n    listText: \"Portfolio\",\r\n    listPath: \"/\",\r\n  },\r\n  {\r\n    listIcon: <ContactMail />,\r\n    listText: \"Contacts\",\r\n    listPath: \"/\",\r\n  },\r\n];\r\n\r\nconst Navbar = () => {\r\n  const [state, setState] = useState({\r\n    right: false,\r\n  });\r\n\r\n  const toggleSideMenu = (slider, open) => () => {\r\n    setState({ ...state, [slider]: open });\r\n  };\r\n  const classes = useStyles();\r\n\r\n  const sideList = (slider) => (\r\n    <Box\r\n      className={classes.menuContainer}\r\n      component=\"div\"\r\n      onClick={toggleSideMenu(slider, false)}\r\n    >\r\n      <Avatar className={classes.avatar} src={avatar} alt=\"Swarnjit Chahal\" />\r\n      <Divider />\r\n      <List>\r\n        {menuItems.map((IsItem, key) => (\r\n          <ListItem button key={key} component={Link} to={IsItem.listPath}>\r\n            <ListItemIcon className={classes.listItem}>\r\n              {IsItem.listIcon}\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              className={classes.listItem}\r\n              primary={IsItem.listText}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n  return (\r\n    <>\r\n      <Box component=\"nav\">\r\n        <AppBar position=\"static\" style={{ background: \"#311\" }}>\r\n          <Toolbar>\r\n            <IconButton onClick={toggleSideMenu(\"right\", true)}>\r\n              <MenuOpenRounded style={{ color: \"orange\" }} />\r\n            </IconButton>\r\n            <Typography variant=\"h5\" style={{ color: \"lightblue\" }}>\r\n              Swarnjit's Portfolio\r\n            </Typography>\r\n            <RightMenu\r\n              open={state.right}\r\n              onClose={toggleSideMenu(\"right\", false)}\r\n            >\r\n              {sideList(\"right\")}\r\n            </RightMenu>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Typography, Avatar, Grid, Box } from \"@material-ui/core\";\r\nimport avatar from \"../images/me.png\";\r\nimport Typed from \"react-typed\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  avatar: {\r\n    width: 120,\r\n    height: 120,\r\n    margin: 8,\r\n  },\r\n  title: {\r\n    color: \"orange\",\r\n  },\r\n  subtitle: {\r\n    color: \"lightblue\",\r\n    marginBottom: \"3rem\",\r\n  },\r\n  typedOutput: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"100vw\",\r\n    textAlign: \"center\",\r\n    zIndex: 1,\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.typedOutput}>\r\n      <Grid container justify=\"center\">\r\n        <Avatar className={classes.avatar} src={avatar} alt=\"Swarnjit Chahal\" />\r\n      </Grid>\r\n      <Typography className={classes.title} variant=\"h4\">\r\n        <Typed strings={[\"Swarnjit Chahal\"]} typeSpeed={40} />\r\n      </Typography>\r\n      <br />\r\n      <Typography className={classes.subtitle} variant=\"h5\">\r\n        <Typed\r\n          strings={[\"Java Developer\", \"React Developer\"]}\r\n          typeSpeed={40}\r\n          backSpeed={50}\r\n          loop\r\n        />\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Header from \"./Header\";\r\nimport Particles from \"react-particles-js\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  particles: {\r\n    position: \"absolute\",\r\n  },\r\n});\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Header />\r\n      <Particles\r\n        canvasClassName={classes.particles}\r\n        params={{\r\n          particles: {\r\n            number: {\r\n              value: 100,\r\n              density: {\r\n                enable: true,\r\n                value_area: 1000,\r\n              },\r\n            },\r\n            size: {\r\n              value: 15,\r\n            },\r\n            line_linked: {\r\n              shadow: {\r\n                enable: true,\r\n                color: \"lightblue\",\r\n                blur: 1,\r\n              },\r\n            },\r\n            shape: {\r\n              type: \"circle\",\r\n              color: \"lightblue\",\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Typography, Box } from \"@material-ui/core\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst useStyles = makeStyles({\r\n  mainContainer: {\r\n    background: \"#f5f0f0\",\r\n  },\r\n});\r\n\r\nconst Resume = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Box component=\"header\" className={classes.mainContainer}>\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          Resume\r\n        </Typography>\r\n        <Box component=\"div\">\r\n          <Typography variant=\"h2\">this is</Typography>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Resume;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route } from \"react-router-dom\";\nimport Home from \"./components/index\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Resume from \"./components/Resume\";\n\nfunction App() {\n  return (\n    <>\n      <CssBaseline />\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/resume\" component={Resume} />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}